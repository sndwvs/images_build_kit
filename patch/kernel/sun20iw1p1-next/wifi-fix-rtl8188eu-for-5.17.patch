--- a/drivers/net/wireless/rtl8188eu/os_dep/osdep_service.c	2022-02-08 20:17:56.542691513 +0200
+++ b/drivers/net/wireless/rtl8188eu/os_dep/osdep_service.c	2022-02-08 20:19:10.890890840 +0200
@@ -1268,8 +1274,12 @@
 inline void thread_exit(_completion *comp)
 {
 #ifdef PLATFORM_LINUX
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 17, 0))
+	kthread_complete_and_exit(comp, 0);
+#else
 	complete_and_exit(comp, 0);
 #endif
+#endif
 
 #ifdef PLATFORM_FREEBSD
 	printf("%s", "RTKTHREAD_exit");
--- a/drivers/net/wireless/rtl8188eu/os_dep/linux/rtw_proc.c	2022-02-08 20:22:15.295383421 +0200
+++ b/drivers/net/wireless/rtl8188eu/os_dep/linux/rtw_proc.c	2022-02-08 20:24:29.235739639 +0200
@@ -37,6 +37,8 @@
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0))
 #define PDE_DATA(inode) PDE((inode))->data
 #define proc_get_parent_data(inode) PDE((inode))->parent->data
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 17, 0))
+#define PDE_DATA(inode) pde_data(inode)
 #endif
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 24))
--- a/drivers/net/wireless/rtl8188eu/include/ieee80211.h	2022-05-28 04:01:55.720744598 +0300
+++ b/drivers/net/wireless/rtl8188eu/include/ieee80211.h	2022-05-28 04:03:10.876979197 +0300
@@ -1529,18 +1529,18 @@
 	(((Addr[2]) & 0xff) == 0xff) && (((Addr[3]) & 0xff) == 0xff) && (((Addr[4]) & 0xff) == 0xff) && \
 				     (((Addr[5]) & 0xff) == 0xff))
 #else
-extern __inline int is_multicast_mac_addr(const u8 *addr)
+static __inline int is_multicast_mac_addr(const u8 *addr)
 {
 	return (addr[0] != 0xff) && (0x01 & addr[0]);
 }
 
-extern __inline int is_broadcast_mac_addr(const u8 *addr)
+static __inline int is_broadcast_mac_addr(const u8 *addr)
 {
 	return ((addr[0] == 0xff) && (addr[1] == 0xff) && (addr[2] == 0xff) &&   \
 		(addr[3] == 0xff) && (addr[4] == 0xff) && (addr[5] == 0xff));
 }
 
-extern __inline int is_zero_mac_addr(const u8 *addr)
+static __inline int is_zero_mac_addr(const u8 *addr)
 {
 	return ((addr[0] == 0x00) && (addr[1] == 0x00) && (addr[2] == 0x00) &&   \
 		(addr[3] == 0x00) && (addr[4] == 0x00) && (addr[5] == 0x00));
