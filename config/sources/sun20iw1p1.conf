
source "$CWD/config/sources/sunxi.inc" || exit 1

BOOT_LOADER_SOURCE="https://github.com/smaeul/u-boot.git"
BOOT_LOADER_DIR="u-boot-${SOCFAMILY}"
BOOT_LOADER_BRANCH="d1-wip::"

OPENSBI_SOURCE="https://github.com/smaeul/opensbi.git"
OPENSBI_DIR="opensbi-${SOCFAMILY}"
OPENSBI_BRANCH="d1-wip::"

SECOND_BOOT_SOURCE="https://github.com/smaeul/sun20i_d1_spl.git"
SECOND_BOOT_DIR="second-boot-${SOCFAMILY}"
SECOND_BOOT_BRANCH="mainline::"

OPENSBI="true"
OPENSBI_PLATFORM="generic"
OPENSBI_BLOB="fw_dynamic.bin"

IMAGE_OFFSET=69632

BOOT_LOADER_BIN="u-boot.toc1.bin"


case $KERNEL_SOURCE in
    next)
            #LINUX_SOURCE="https://github.com/smaeul/linux.git"
            LINUX_SOURCE="https://github.com/tekkamanninja/linux.git"
            #KERNEL_BRANCH="riscv/d1-wip::"
            KERNEL_BRANCH="allwinner_nezha_d1_devel::"
            KERNEL_DIR="linux-$SOCFAMILY-$KERNEL_SOURCE"
    ;;
esac




uboot_customization()
{
    :
}


create_uboot()
{
    pushd $SOURCE/$BOOT_LOADER_DIR >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1

    if [[ $SOCFAMILY == sun20* ]]; then
        tools/mkimage -T sunxi_toc1 -d $CWD/config/opensbi/$SOCFAMILY/toc1.cfg $BOOT_LOADER_BIN >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1
    fi

    install -Dm644 $BOOT_LOADER_BIN $BUILD/$OUTPUT/$TOOLS/$BOARD_NAME/boot/$BOOT_LOADER_BIN >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1
    popd >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1
}


write_uboot()
{
    # clear u-boot
#    dd if=/dev/zero of=$1 bs=1k count=$((${IMAGE_OFFSET}-1)) seek=1 status=noxfer >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1

    # boot0 or SPL (Secondary Program Loader) which the first stage after BootROM, it is responsible for initializing DRAM and loading next stage firmware from storage(Flash or SD).
    # The Nezha boot ROM can read the boot0 SPL from two different locations:
    #    starting at sector 16
    #    starting at sector 256
    # The location in sector 16 is incompatible with GPT partioning which by default uses 34 sectors. In gdisk you will have to reduce the number
    # of entries in the partition table to â‰¤ 56 via the expert settings. So it may be preferable to write boot0 starting at sector 256 instead:
    if [[ -f $BUILD/$OUTPUT/$TOOLS/$BOARD_NAME/boot/boot0_sdcard_sun20iw1p1.bin ]]; then
        dd if=$BUILD/$OUTPUT/$TOOLS/$BOARD_NAME/boot/boot0_sdcard_sun20iw1p1.bin of=$1 bs=512 seek=16 status=noxfer >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1
        message "" "write" "bootloader: boot0_sdcard_sun20iw1p1.bin"
    fi
    if [[ -f $BUILD/$OUTPUT/$TOOLS/$BOARD_NAME/boot/$BOOT_LOADER_BIN ]]; then
        dd if=$BUILD/$OUTPUT/$TOOLS/$BOARD_NAME/boot/$BOOT_LOADER_BIN of=$1 bs=512 seek=32800 status=noxfer >> $LOG 2>&1 || (message "err" "details" && exit 1) || exit 1
        message "" "write" "bootloader: $BOOT_LOADER_BIN"
    fi
}

