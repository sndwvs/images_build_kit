From a5f17bcb3db5f3e27483bf5b34f370703a622972 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Max=20G=C3=B6rner?=
 <5477952+MaxG87@users.noreply.github.com>
Date: Thu, 24 Mar 2022 08:56:26 +0100
Subject: [PATCH] Remove unrequired usages of mm_segment_t

---
 core/efuse/rtw_efuse.c | 1 -
 core/rtw_ieee80211.c   | 1 -
 2 files changed, 2 deletions(-)

diff --git a/core/efuse/rtw_efuse.c b/core/efuse/rtw_efuse.c
index 663239a..006fa47 100644
--- a/drivers/net/wireless/rtl8822cs/core/efuse/rtw_efuse.c
+++ b/drivers/net/wireless/rtl8822cs/core/efuse/rtw_efuse.c
@@ -3241,7 +3241,6 @@ int storeAdaptorInfoFile(char *path, u8 *efuse_data)
 int retriveAdaptorInfoFile(char *path, u8 *efuse_data)
 {
 	int ret = _SUCCESS;
-	mm_segment_t oldfs;
 	struct file *fp;
 
 	if (path && efuse_data) {
diff --git a/core/rtw_ieee80211.c b/core/rtw_ieee80211.c
index 526cf0e..a2fd39d 100644
--- a/drivers/net/wireless/rtl8822cs/core/rtw_ieee80211.c
+++ b/drivers/net/wireless/rtl8822cs/core/rtw_ieee80211.c
@@ -1606,7 +1606,6 @@ int rtw_get_mac_addr_intel(unsigned char *buf)
 	int ret = 0;
 	int i;
 	struct file *fp = NULL;
-	mm_segment_t oldfs;
 	unsigned char c_mac[MAC_ADDRESS_LEN];
 	char fname[] = "/config/wifi/mac.txt";
 	int jj, kk;
From 3de6f79af012446f52d0350f9df100747dce3a7c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Max=20G=C3=B6rner?=
 <5477952+MaxG87@users.noreply.github.com>
Date: Thu, 24 Mar 2022 08:56:42 +0100
Subject: [PATCH] Use mm_segment_t only on Linux < 5.10.0

All usages of `mm_segment_t` are guarded by the same preprocessor
directive, so nothing should really change.
---
 core/rtw_btcoex.c       | 2 ++
 core/rtw_wlan_util.c    | 2 ++
 os_dep/linux/os_intfs.c | 2 ++
 os_dep/osdep_service.c  | 6 ++++++
 4 files changed, 12 insertions(+)

diff --git a/core/rtw_btcoex.c b/core/rtw_btcoex.c
index fe649f6..9edcfdb 100644
--- a/drivers/net/wireless/rtl8822cs/core/rtw_btcoex.c
+++ b/drivers/net/wireless/rtl8822cs/core/rtw_btcoex.c
@@ -1468,7 +1468,9 @@ u8 rtw_btcoex_sendmsgbysocket(_adapter *padapter, u8 *msg, u8 msg_size, bool for
 {
 	u8 error;
 	struct msghdr	udpmsg;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t	oldfs;
+#endif
 	struct iovec	iov;
 	struct bt_coex_info *pcoex_info = &padapter->coex_info;
 
diff --git a/core/rtw_wlan_util.c b/core/rtw_wlan_util.c
index e55e7e7..e6c5e76 100644
--- a/drivers/net/wireless/rtl8822cs/core/rtw_wlan_util.c
+++ b/drivers/net/wireless/rtl8822cs/core/rtw_wlan_util.c
@@ -4797,7 +4797,9 @@ int rtw_dev_nlo_info_set(struct pno_nlo_info *nlo_info, pno_ssid_t *ssid,
 
 	int i = 0;
 	struct file *fp;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t fs;
+#endif
 	loff_t pos = 0;
 	u8 *source = NULL;
 	long len = 0;
diff --git a/os_dep/linux/os_intfs.c b/os_dep/linux/os_intfs.c
index ff628fe..812429b 100644
--- a/drivers/net/wireless/rtl8822cs/os_dep/linux/os_intfs.c
+++ b/drivers/net/wireless/rtl8822cs/os_dep/linux/os_intfs.c
@@ -4261,7 +4261,9 @@ static int route_dump(u32 *gw_addr , int *gw_index)
 	struct msghdr msg;
 	struct iovec iov;
 	struct sockaddr_nl nladdr;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+#endif
 	char *pg;
 	int size = 0;
 
diff --git a/os_dep/osdep_service.c b/os_dep/osdep_service.c
index 444185f..d320e08 100644
--- a/drivers/net/wireless/rtl8822cs/os_dep/osdep_service.c
+++ b/drivers/net/wireless/rtl8822cs/os_dep/osdep_service.c
@@ -2225,7 +2225,9 @@ static int isFileReadable(const char *path, u32 *sz)
 {
 	struct file *fp;
 	int ret = 0;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+#endif
 	char buf;
 
 	fp = filp_open(path, O_RDONLY, 0);
@@ -2270,7 +2272,9 @@ static int isFileReadable(const char *path, u32 *sz)
 static int retriveFromFile(const char *path, u8 *buf, u32 sz)
 {
 	int ret = -1;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+#endif
 	struct file *fp;
 
 	if (path && buf) {
@@ -2313,7 +2317,9 @@ static int retriveFromFile(const char *path, u8 *buf, u32 sz)
 static int storeToFile(const char *path, u8 *buf, u32 sz)
 {
 	int ret = 0;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 10, 0))
 	mm_segment_t oldfs;
+#endif
 	struct file *fp;
 
 	if (path && buf) {
